// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  firstName String
  lastName  String
  email     String @unique
  password  String 
  refreshToken  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Profile {

  id   String @id @default(uuid())
    
  image String
  readingList String
  works Int
  followers Int

}

// model Tag {
//   id Int  @id @default(autoincrement())
//   name String?
//   story TagOnStory[]

// }
// model TagOnStory {
//   tagid Int 
//   tag Tag @relation( fields: [tagid] , references: [id])
//   storyid String
//   story Story @relation(fields: [storyid] , references: [id])
//   @@id([storyid ,tagid])
// }

model Story {
  
  id String @id @default(uuid())
  image String
  title String
  description String
  category String
  Language String?
  targetAudience String?
  Rating Boolean?
  chapters Chapter[]
  tags String[]
  mainCharacters String []

}

model Chapter {

  id  Int @id @default(autoincrement())
  chapterNumber Int
  storyId String 
  story Story @relation(fields: [storyId] ,references: [id] , onDelete: Cascade)
  name String
}

// model MainCharacter {

//   id Int @id @default(autoincrement())
//   name String 
//   storyId String
//   story Story @relation(fields: [storyId] ,references: [id])
  
// }
